@page "/fetchdata"

@using bserver.Data
@*@using Microsoft.AspNetCore.SignalR.Client*@
@inject WeatherForecastService ForecastService
@inject NavigationManager NavigationManager

<h1>Weather forecast</h1>

<button class="btn btn-primary" @onclick="Connect">
    Conn
</button>


<p>This component demonstrates fetching data from a service.</p>

<img src="@ForecastService.GetImage2()" />

<img src="data:image;base64,@System.Convert.ToBase64String(ForecastService.GetImage())" />

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[] forecasts;

    

    

    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
    }

    protected async Task Connect(MouseEventArgs e)
    {
        
        return;



    }


}
